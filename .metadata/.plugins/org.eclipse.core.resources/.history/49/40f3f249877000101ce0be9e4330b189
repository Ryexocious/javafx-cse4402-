package controller;

import javafx.animation.FadeTransition;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Pane;
import javafx.stage.Stage;
import javafx.util.Duration;
import model.User;
import utils.PairingCodeGenerator;

import java.io.File;
import java.io.IOException;
import java.net.URL;

public class RegistrationController {

    @FXML private TextField nameField;
    @FXML private TextField emailField;
    @FXML private TextField phoneField;
    @FXML private PasswordField passwordField;
    @FXML private ComboBox<String> roleComboBox;
    @FXML private TextField pairingCodeField;
    @FXML private TextField usernameField;

    @FXML private Label pairingCodeLabel;
    @FXML private Label errorLabel;
    @FXML private Button registerButton;

    @FXML private HBox emailBox, pairingCodeBox;

    @FXML
    public void initialize() {
        roleComboBox.getItems().addAll("Elder", "Caretaker");

        // Hide caretaker-specific fields by default
        emailBox.setVisible(false);
        emailBox.setManaged(false);
        pairingCodeBox.setVisible(false);
        pairingCodeBox.setManaged(false);

        roleComboBox.setOnAction(e -> {
            String role = roleComboBox.getValue();
            boolean isElder = "Elder".equals(role);

            emailBox.setVisible(!isElder);
            emailBox.setManaged(!isElder);
            pairingCodeBox.setVisible(!isElder);
            pairingCodeBox.setManaged(!isElder);
        });
    }

    @FXML
    private void handleRegistration() {
        System.out.println("âœ… handleRegistration() triggered");

        String name = nameField.getText();
        String email = emailField.getText();
        String phone = phoneField.getText();
        String username = usernameField.getText();
        String password = passwordField.getText();
        String role = roleComboBox.getValue();
        String pairingCode = pairingCodeField.getText();

        if (name.isEmpty() || username.isEmpty() || password.isEmpty() || role == null) {
            errorLabel.setText("Please fill in all required fields.");
            return;
        }

        if ("Caretaker".equals(role)) {
            if (email.isEmpty() || phone.isEmpty() || pairingCode.isEmpty()) {
                errorLabel.setText("Caretakers must fill email, phone, and pairing code.");
                return;
            }
        }

        // Create user (dummy, optional)
        User user = new User(name, username, password, role);

        String postData = "Elder".equals(role)
                ? PairingCodeGenerator.generate()
                : name;

        goToPostRegistration(role, postData);
    }

    private void goToPostRegistration(String role, String data) {
        try {
            String basePath = System.getProperty("user.dir"); // current working directory
            File file = new File(basePath + "/src/fxml/post_registration.fxml");

            System.out.println("ðŸ“‚ Looking for FXML at: " + file.getAbsolutePath());

            if (!file.exists()) {
                errorLabel.setText("FXML NOT FOUND at: " + file.getAbsolutePath());
                return;
            }

            URL resourceUrl = file.toURI().toURL();
            FXMLLoader loader = new FXMLLoader(resourceUrl);
            Pane root = loader.load();

            // Call initializeView(role, data)
            PostRegistrationController controller = loader.getController();
            controller.initializeView(role, data);

            Stage stage = (Stage) nameField.getScene().getWindow();
            Scene scene = new Scene(root);

            // Fade-in effect
            FadeTransition ft = new FadeTransition(Duration.millis(400), root);
            ft.setFromValue(0);
            ft.setToValue(1);
            ft.play();

            stage.setScene(scene);
            stage.show();

            System.out.println("âœ… Navigation to post_registration.fxml complete");

        } catch (IOException e) {
            e.printStackTrace();
            errorLabel.setText("ERROR: " + e.getMessage());
        }
    }
}
